"use strict";var h=require("@rollup/pluginutils"),p=require("path"),y=(e={})=>{e.transform||(e.transform=t=>t);const u={},d=e.alwaysOutput??!1,m=h.createFilter(e.include??["**/*.css"],e.exclude??[]),l=(t,r,s=new Set)=>{if(s.has(t))return[];s.add(t);const n=[t];return r(t).importedIds.forEach(i=>{n.push(...l(i,r,s))}),n};return{name:"import-css",transform(t,r){var s;if(!m(r))return;const n=e.minify?S(e.transform(t)):e.transform(t);(!u[r]||u[r]!=n)&&(u[r]=n);const i=this.getModuleInfo(r);return e.modules||((s=i.assertions)==null?void 0:s.type)=="css"?{code:`const sheet = new CSSStyleSheet();sheet.replaceSync(${JSON.stringify(n)});export default sheet;`,map:{mappings:""}}:{code:`export default ${JSON.stringify(n)};`,map:{mappings:""}}},generateBundle(t,r){let s={},n=null;for(let a in r)s=Object.assign(s,r[a].modules),n||(n=r[a].facadeModuleId);const i=l(n,this.getModuleInfo),c=Object.entries(u).sort((a,o)=>i.indexOf(a[0])-i.indexOf(o[0])).map(([a,o])=>{if(!s[a])return o}).join(`
`);if(c.trim().length<=0&&!d)return;const f=()=>{const a=e.output??t.file??"bundle.js";return`${p.basename(a,p.extname(a))}.css`},g=()=>{if(e.output)return e.output;if(!t.assetFileNames)return`${f()}.css`};this.emitFile({type:"asset",name:f(),fileName:g(),source:c})}}};function S(e){return e=e.replace(/\/\*(?:(?!\*\/)[\s\S])*\*\/|[\r\n\t]+/g,""),e=e.replace(/ {2,}/g," "),e=e.replace(/ ([{:}]) /g,"$1"),e=e.replace(/([{:}]) /g,"$1"),e=e.replace(/([;,]) /g,"$1"),e=e.replace(/ !/g,"!"),e}module.exports=y;
